If many people are working on a project then it will be deal with
branches.

command 1: git branch
		(This command list down all branches in repository)

command 1.1: git branch -a
		(list down all branches in git repository)

command 2: git branch my_branch
		This command is used to create new branch.	
		(my_branch is the branch name here)

command 3: git checkout my_branch
		(checkout is used to goto the specific branch
		here we are moving from master to my_branch)
		
Note: commit remains in the branch with which it is related to.

command 4: git branch -d my_branch
		(-d deletes the specific branch)
		
command 5: git branch -D my_branch
		(-D force delte the specific branch)

command 6: git checkout -b my_new_branch
		(b flag creates and checkout newbranch)

command 7: git push origin branch_name
		(push command for a specific branch)

command 8: git merge master
		(To merge master branch in this branch)

command 9: git checkout master
		(To goto the master branch)

command 10:git merge branch_name
		(This will merge branch_name into master) 

command 11:git merge --no-ff branch_name
		(--no-ff flag is used to keep track who did the
		merge and when? Because we merge master with our 
		branch multiple time and these commits are of no use)

		(so we have to use this when we merge any_branch into
		the master branch so we can keep track.)
